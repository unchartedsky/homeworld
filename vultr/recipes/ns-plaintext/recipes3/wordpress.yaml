apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wordpress
  namespace: plaintext
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: https
    nginx.ingress.kubernetes.io/proxy-body-size: 128m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    # nginx.ingress.kubernetes.io/client-body-buffer-size: 64m
    # nginx.ingress.kubernetes.io/server-snippet: |
    #   set $agentflag 0;

    #   if ($http_user_agent ~* "(Feedly)" ){
    #     set $agentflag 1;
    #   }

    #   if ($http_user_agent ~* "(Feedbin)" ){
    #     set $agentflag 1;
    #   }

    #   # if ($http_user_agent ~* "(Mozilla)" ){
    #   #   set $agentflag 1;
    #   # }

    #   # if ($http_user_agent ~* "(Firefox)" ){
    #   #   set $agentflag 1;
    #   # }

    #   if ($http_user_agent ~* "(Edg)" ){
    #     set $agentflag 1;
    #   }

    #   if ( $agentflag = 0 ) {
    #     return 403;
    #   }

    cert-manager.io/issuer: letsencrypt-prod

    # For Cloudflare proxied entries, set the TTL annotation to 1 (automatic), or do not set it.
    external-dns.alpha.kubernetes.io/ttl: "1"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - andromedarabbit.net
        - www.andromedarabbit.net
      secretName: tls-wordpress
  rules:
    - host: andromedarabbit.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wordpress
                port:
                  number: 443
    - host: www.andromedarabbit.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wordpress
                port:
                  number: 443
---
# Source: wordpress/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: wordpress
  namespace: plaintext
  labels:
    app: wordpress
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-13.1.15
    app.kubernetes.io/instance: blog
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "40Gi"
  storageClassName: vultr-block-storage-hdd-retain
---
# Source: wordpress/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: plaintext
  labels:
    app: wordpress
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-13.1.15
    app.kubernetes.io/instance: blog
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  # type: LoadBalancer
  # sessionAffinity: None
  # externalTrafficPolicy: "Cluster"
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: blog
---
# Source: wordpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: plaintext
  labels:
    app: wordpress
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-13.1.15
    app.kubernetes.io/instance: blog
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: wordpress
      app.kubernetes.io/name: wordpress
      app.kubernetes.io/instance: blog
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: wordpress
        app.kubernetes.io/name: wordpress
        helm.sh/chart: wordpress-13.1.15
        app.kubernetes.io/instance: blog
        app.kubernetes.io/managed-by: Helm
    spec:

      # yamllint disable rule:indentation
      hostAliases:
        - hostnames:
          - status.localhost
          ip: 127.0.0.1
      # yamllint enable rule:indentation
      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: wordpress
                    app.kubernetes.io/instance: blog
                namespaces:
                  - keaton
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      securityContext:
        fsGroup: 1001
      serviceAccountName: default
      imagePullSecrets:
        - name: github-andromedarabbit
      containers:
        - name: wordpress
          image: ghcr.io/unchartedsky/wordpress:sha-950e405
          # imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          # command: ["/bin/bash", "-c", "--"]
          # args: ["while true; do sleep 30; done;"]
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MARIADB_HOST
              value: "mariadb"
            - name: MARIADB_PORT_NUMBER
              value: "3306"
            - name: WORDPRESS_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-database
            - name: WORDPRESS_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-username
            - name: WORDPRESS_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-password
            - name: WORDPRESS_USERNAME
              value: "team7"
            - name: WORDPRESS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress
                  key: wordpress-password
            - name: WORDPRESS_EMAIL
              value: "team7@unchartedsky.com"
            - name: WORDPRESS_FIRST_NAME
              value: "Admin"
            - name: WORDPRESS_LAST_NAME
              value: "Team7"
            - name: WORDPRESS_HTACCESS_OVERRIDE_NONE
              value: "no"
            - name: WORDPRESS_ENABLE_HTACCESS_PERSISTENCE
              value: "no"
            - name: WORDPRESS_BLOG_NAME
              value: "User's Blog!"
            - name: WORDPRESS_SKIP_BOOTSTRAP
              value: "no"
            - name: WORDPRESS_TABLE_PREFIX
              value: "wp_"
            - name: WORDPRESS_SCHEME
              value: "https"
            - name: WORDPRESS_EXTRA_WP_CONFIG_CONTENT
              value: ""
            - name: WORDPRESS_AUTO_UPDATE_LEVEL
              value: "minor"
            - name: WORDPRESS_PLUGINS
              value: "none"
            - name: APACHE_HTTP_PORT_NUMBER
              value: "8080"
            - name: APACHE_HTTPS_PORT_NUMBER
              value: "8443"
            # - name: WORDPRESS_RESET_DATA_PERMISSIONS
            #   value: "yes"
          envFrom:
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders: []
              path: /wp-admin/install.php
              port: 'https'
              scheme: 'HTTPS'
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders: []
              path: /wp-login.php
              port: 'https'
              scheme: 'HTTPS'
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          # resources:
          #   requests:
          #     cpu: 500m
          #     memory: 512Mi
          #   limits:
          #     cpu: 4000m
          #     memory: 8096Mi
          volumeMounts:
            - mountPath: /bitnami/wordpress
              name: wordpress-data
              subPath: wordpress
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: wordpress
