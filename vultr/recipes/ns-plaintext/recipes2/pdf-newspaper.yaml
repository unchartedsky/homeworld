apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pdf-newspaper
  namespace: plaintext
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: http
    nginx.ingress.kubernetes.io/proxy-body-size: 128m
    nginx.ingress.kubernetes.io/server-snippet: |
      set $agentflag 0;

      if ($http_user_agent ~* "(Feedly)" ){
        set $agentflag 1;
      }

      if ($http_user_agent ~* "(Feedbin)" ){
        set $agentflag 1;
      }

      # if ($http_user_agent ~* "(Mozilla)" ){
      #   set $agentflag 1;
      # }

      # if ($http_user_agent ~* "(Firefox)" ){
      #   set $agentflag 1;
      # }

      if ($http_user_agent ~* "(Edg)" ){
        set $agentflag 1;
      }

      if ( $agentflag = 0 ) {
        return 403;
      }

    cert-manager.io/issuer: letsencrypt-prod

    # For Cloudflare proxied entries, set the TTL annotation to 1 (automatic), or do not set it.
    external-dns.alpha.kubernetes.io/ttl: "1"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - pdf.andromedarabbit.net
    secretName: tls-pdf-newspaper
  rules:
  - host: pdf.andromedarabbit.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pdf-newspaper
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: pdf-newspaper
  namespace: plaintext
  labels:
    app: pdf-newspaper
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: pdf-newspaper
---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: pdf-newspaper-data
#   namespace: plaintext
#   annotations: {}
#   labels:
#     app: pdf-newspaper
# spec:
#   accessModes:
#   - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
# ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: copy-pdf-newspaper-scripts
  namespace: plaintext
data:
  copy.sh: |
    #!/bin/bash -xe
    export PDF_NEWPAPER_VERSION="2.6"

    aws s3 --endpoint=https://sgp1.digitaloceanspaces.com cp "s3://team7/store/pdf-newspaper-${PDF_NEWPAPER_VERSION}.zip" /tmp/
    aws s3 --endpoint=https://sgp1.digitaloceanspaces.com cp "s3://team7/store/tcpdf-fonts.zip" /tmp/

    cd /tmp
    unzip "pdf-newspaper-${PDF_NEWPAPER_VERSION}.zip"
    unzip "tcpdf-fonts.zip"
    cp -Rf --preserve=all pdf-newspaper-${PDF_NEWPAPER_VERSION}/* /var/www/html/
    cp -Rf --preserve=all tcpdf-fonts/* /var/www/html/fonts/
    # cp -Rf --preserve=all NanumSquareRound/* /var/www/html/fonts/

    sed -i -e 's/linlibertine_as/nanumsquareroundb/g' /var/www/html/makepdf.php
    sed -i -e 's/helveticab/nanumsquareroundb/g' /var/www/html/makepdf.php
    sed -i -e 's/dejavuserifcondensed/nanumsquareroundb/g' /var/www/html/makepdf.php

  run-nginx.sh: |
    #!/bin/bash -xe
    chmod -R g+rwX /var/www/html
    # chown -R 1001:1001 /var/www/html
    # chown 1001:1001 /opt/bitnami/nginx/html

    /entrypoint.sh /run.sh

  run-chown-php.sh: |
    #!/bin/bash -xe
    chmod -R g+rwX /var/www/html
    chown -R www-data:www-data /var/www/html

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdf-newspaper
  namespace: plaintext
  labels:
    app: pdf-newspaper
spec:
  selector:
    matchLabels:
      app: pdf-newspaper
  replicas: 1
  template:
    metadata:
      labels:
        app: pdf-newspaper
    spec:
      imagePullSecrets:
      - name: github-andromedarabbit
      initContainers:
      - name: copy
        image: ghcr.io/unchartedsky/macgyver:fd216d4
        # command: ['sh', '-c', 'chmod -R g+rwX /opt/bitnami/wordpress']
        args:
        - /bin/bash
        - -c
        - "/scripts/copy.sh && /scripts/run-chown-php.sh"
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: backup
              key: aws_access_key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: backup
              key: aws_secret_access_key
        volumeMounts:
        - mountPath: /var/www/html
          name: pdf-newspaper-data
        - name: scripts-d
          mountPath: /scripts
      containers:
      - name: app
        image: ghcr.io/unchartedsky/fulltextrss-base:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - mountPath: /var/www/html/custom_config.php
          name: pdf-newspaper-secret
          subPath: custom_config.php
        - mountPath: /var/www/html
          name: pdf-newspaper-data
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 5
      restartPolicy: Always
      volumes:
      - name: pdf-newspaper-secret
        secret:
          secretName: pdf-newspaper
          items:
          - key: custom_config.php
            path: custom_config.php
      # - name: pdf-newspaper-config
      #   configMap:
      #     name: pdf-newspaper-configmap
      # - name: pdf-newspaper-data
      #   persistentVolumeClaim:
      #     claimName: pdf-newspaper-data
      - name: pdf-newspaper-data
        emptyDir: {}
      - name: scripts-d
        projected:
          defaultMode: 500
          sources:
          - configMap:
              name: copy-pdf-newspaper-scripts
              items:
              - key: copy.sh
                path: copy.sh
              - key: run-chown-php.sh
                path: run-chown-php.sh
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: nginx-data
#   namespace: plaintext
#   annotations: {}
#   labels:
#     app: nginx
# spec:
#   accessModes:
#   - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
