#!/bin/bash -e
OSTYPE=$(uname)
case "$OSTYPE" in
	Darwin)  export THIS_OS="darwin" ;;
	Linux) export THIS_OS="linux" ;;
	*) echo "Your Operating System '$THIS_OS' is not supported." && exit 1 ;;
esac

ARCHITECTURE=$(uname -m)
case "$ARCHITECTURE" in
	amd64)  export ARCH="amd64" ;;
	x86_64) export ARCH="amd64" ;;
	arm64)  export ARCH="arm64" ;;
	*) echo "Your Architecture '$ARCH' is not supported."  && exit 2 ;;
esac

PATH_add "${PWD}/utils"
PATH_add "${PWD}/bin/${THIS_OS}_${ARCH}"

export ROOT_DIR="$(git rev-parse --show-toplevel)"
export SECRETS_DIR="${ROOT_DIR}/.secrets"

# mozilla/sops
# make decrypt

source "${SECRETS_DIR}/.envrc.sh"

if [[ -f "${ROOT_DIR}/kubeconfig.yaml" ]]; then
	export KUBECONFIG="${ROOT_DIR}/kubeconfig.yaml"
else
	export KUBECONFIG="${SECRETS_DIR}/kubeconfig.yaml"
fi


# Kubernetes
export HELM_HOME="${ROOT_DIR}/.helm"
if [[ ! -d ${HELM_HOME} ]]; then
	mkdir -p "${HELM_HOME}"
fi
export KUBE_EDITOR="vim"

export_alias k 'kubectl $@'
export_alias kube 'kubectl $@'
